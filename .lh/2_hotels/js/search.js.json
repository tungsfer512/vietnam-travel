{
    "sourceFile": "2_hotels/js/search.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1656612733041,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1656612733041,
            "name": "Commit-0",
            "content": "let areas = [\r\n  {\r\n    area: 'ĐÔNG Á',\r\n    countries: [\r\n      {\r\n        country: 'HỒNG KÔNG & MACAO',\r\n        cities:\r\n          [\r\n            'HỒNG KÔNG',\r\n            'MACAO'\r\n          ]\r\n      },\r\n      {\r\n        country: 'ĐÀI LOAN',\r\n        cities:\r\n          [\r\n            'Đài Bắc',\r\n            'Nghi Lan',\r\n            'Hoa Liên',\r\n            'Đài Đông',\r\n            'Đài Trung',\r\n            'Cao Hùng',\r\n            'Bành Hồ',\r\n            'Đài Nam',\r\n            'Kinmen'\r\n          ]\r\n      },\r\n      {\r\n        country: 'NHẬT BẢN',\r\n        cities:\r\n          [\r\n            'Tokyo',\r\n            'Osaka',\r\n            'Kyoto',\r\n            'Hokkaido',\r\n            'Kyushu',\r\n            'Chugoku',\r\n            'Tohoku',\r\n            'Hokushinetsu',\r\n            'Kumamoto',\r\n            'Tochigi',\r\n            'Hyogo',\r\n            'Hiroshima',\r\n            'Fukuoka',\r\n            'Aichi',\r\n            'Chiba',\r\n            'Gifu',\r\n            'Shizuoka',\r\n            'Okinawa',\r\n            'Kanagawa',\r\n            'Nagasaki',\r\n            'Nara',\r\n            'Đảo Miyako',\r\n            'Đảo Ishigaki & Yaeyama',\r\n            'Kinki',\r\n            'Kitakanto',\r\n            'Shikoku'\r\n          ]\r\n      },\r\n      {\r\n        country: 'HÀN QUỐC',\r\n        cities:\r\n          [\r\n            'Seoul',\r\n            'Jeju',\r\n            'Busan',\r\n            'Gangwon-do',\r\n            'Gyeonggi-do',\r\n            'Incheon'\r\n          ]\r\n      },\r\n      {\r\n        country: 'TRUNG QUỐC',\r\n        cities:\r\n          [\r\n            'Bắc Kinh',\r\n            'Thượng Hải',\r\n            'Tô Châu & Hàng Châu',\r\n            'Tây An',\r\n            'Thành Đô',\r\n            'Quế Lâm',\r\n            'Trương Gia Giới',\r\n            'Tam Á & Hải Khẩu',\r\n            'Hạ Môn',\r\n            'Trùng Khánh',\r\n            'Quý Châu',\r\n            'Nội Mông'\r\n          ]\r\n      },\r\n\r\n    ]\r\n  },\r\n  {\r\n    area: 'ĐÔNG NAM Á',\r\n    countries: [\r\n      {\r\n        country: 'SINGAPORE',\r\n        cities:\r\n          [\r\n            'Singapore'\r\n          ]\r\n      },\r\n      {\r\n        country: 'THÁI LAN',\r\n        cities:\r\n          [\r\n            'Bangkok',\r\n            'Pattaya',\r\n            'Chiang Mai',\r\n            'Phuket',\r\n            'Koh Samui',\r\n            'Krabi',\r\n            'Hua Hin',\r\n            'Koh Chang',\r\n            'Koh Phi Phi',\r\n            'Chiang Rai',\r\n            'Koh Pha Ngan & Surat Thani',\r\n            'Kanchanaburi',\r\n            'Sukhothai'\r\n          ]\r\n      },\r\n      {\r\n        country: 'MALAYSIA',\r\n        cities:\r\n          [\r\n            'Kuala Lumpur',\r\n            'Penang',\r\n            'Sabah',\r\n            'Sarawak',\r\n            'Langkawi',\r\n            'Johor Bahru',\r\n            'Ipoh',\r\n            'Melaka',\r\n            'Cao nguyên Genting'\r\n          ]\r\n      },\r\n      {\r\n        country: 'INDONESIA',\r\n        cities:\r\n          [\r\n            'Bali',\r\n            'Jakarta',\r\n            'Lombok',\r\n            'Batam',\r\n            'Bintan',\r\n            'Yogyakarta'\r\n          ]\r\n      },\r\n      {\r\n        country: 'PHILIPPINES',\r\n        cities:\r\n          [\r\n            'Boracay',\r\n            'Manila',\r\n            'Cebu',\r\n            'Palawan',\r\n            'Bohol'\r\n          ]\r\n      },\r\n      {\r\n        country: 'VIỆT NAM',\r\n        cities:\r\n          [\r\n            'TP Hồ Chí Minh',\r\n            'Hà Nội',\r\n            'Huế',\r\n            'Hội An',\r\n            'Đà Nẵng',\r\n            'Phú Quốc',\r\n            'Đà Lạt',\r\n            'Nha Trang',\r\n            'Sapa',\r\n            'Quy Nhơn',\r\n            'Hạ Long',\r\n            'Đồng Hới - Quảng Bình',\r\n            'Vũng Tàu',\r\n            'Cần Thơ - ĐB Sông Cửu Long',\r\n            'Mũi Né - Phan Thiết',\r\n            'Côn Đảo'\r\n          ]\r\n      },\r\n      {\r\n        country: 'CAMPUCHIA',\r\n        cities:\r\n          [\r\n            'Siem Reap',\r\n            'Phnom Penh',\r\n            'Sihanoukville'\r\n          ]\r\n      },\r\n      {\r\n        country: 'MYANMAR',\r\n        cities:\r\n          [\r\n            'Yangon',\r\n            'Bagan',\r\n            'Mandalay',\r\n            'Inle Lake'\r\n          ]\r\n      },\r\n      {\r\n        country: 'LÀO',\r\n        cities:\r\n          [\r\n            'Luang Prabang',\r\n            'Viêng Chăn'\r\n          ]\r\n      },\r\n\r\n    ]\r\n  },\r\n  {\r\n    area: 'BẮC MỸ',\r\n    countries: [\r\n      {\r\n        country: 'MỸ',\r\n        cities:\r\n          [\r\n            'New York',\r\n            'Los Angeles',\r\n            'Orlando',\r\n            'San Francisco',\r\n            'Chicago',\r\n            'Las Vegas',\r\n            'Washington DC',\r\n            'Boston',\r\n            'Miami',\r\n            'San Diego',\r\n            'Hawaii'\r\n          ]\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    area: 'NAM Á',\r\n    countries: [\r\n      {\r\n        country: 'NEPAL',\r\n        cities:\r\n          [\r\n            'Kathmandu',\r\n            'Pokhara',\r\n          ]\r\n      },\r\n      {\r\n        country: 'BHUTAN',\r\n        cities:\r\n          [\r\n            'Thimphu',\r\n          ]\r\n      },\r\n      {\r\n        country: 'ẤN ĐỘ',\r\n        cities:\r\n          [\r\n            'Mumbai',\r\n            'Delhi',\r\n            'Jaipur',\r\n            'Udaipur',\r\n            'Goa',\r\n            'Himachal Pradesh',\r\n            'Pune'\r\n          ]\r\n      },\r\n      {\r\n        country: 'SRI LANKA',\r\n        cities:\r\n          [\r\n            'Colombo',\r\n          ]\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    area: 'TRUNG ĐÔNG',\r\n    countries: [\r\n      {\r\n        country: 'CÁC TIỂU VƯƠNG QUỐC Ả RẬP THỐNG NHẤT',\r\n        cities:\r\n          [\r\n            'Dubai',\r\n            'Abu Dhabi'\r\n          ]\r\n      },\r\n      {\r\n        country: 'THỔ NHĨ KÌ',\r\n        cities:\r\n          [\r\n            'Cappadocia',\r\n          ]\r\n      },\r\n      {\r\n        country: 'ISRAEL',\r\n        cities:\r\n          [\r\n            'Jerusalem',\r\n          ]\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    area: 'Bắc Âu',\r\n    countries: [\r\n      {\r\n        country: 'iceland',\r\n        cities:\r\n          [\r\n            'Reykjavik',\r\n            'Bắc Iceland',\r\n            'South Iceland'\r\n          ]\r\n      },\r\n      {\r\n        country: 'phần lan',\r\n        cities:\r\n          [\r\n            'Helsinki',\r\n            'Lapland Phần Lan'\r\n          ]\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    area: 'tây âu',\r\n    countries: [\r\n      {\r\n        country: 'anh',\r\n        cities:\r\n          [\r\n            'london',\r\n            'edinburgh',\r\n          ]\r\n      },\r\n      {\r\n        country: 'pháp',\r\n        cities:\r\n          [\r\n            'paris',\r\n            'Alsace, Burgundy & Champagne',\r\n          ]\r\n      },\r\n      {\r\n        country: 'hà lan',\r\n        cities:\r\n          [\r\n            'amsterdam',\r\n          ]\r\n      },\r\n\r\n    ]\r\n  },\r\n  {\r\n    area: 'nam âu',\r\n    countries: [\r\n      {\r\n        country: 'ý',\r\n        cities:\r\n          [\r\n            'rome',\r\n            'Milan',\r\n            'Florence',\r\n            'Venice',\r\n            'naples',\r\n            'pisa'\r\n          ]\r\n      },\r\n      {\r\n        country: 'tây ban nha',\r\n        cities:\r\n          [\r\n            'Madrid',\r\n            'Barcelona',\r\n            'Seville',\r\n            'Malaga & Costa del Sol'\r\n          ]\r\n      },\r\n      {\r\n        country: 'hy lạp',\r\n        cities:\r\n          [\r\n            'athens',\r\n          ]\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    area: 'trung tâm châu âu',\r\n    countries: [\r\n      {\r\n        country: 'đức',\r\n        cities:\r\n          [\r\n            'berlin',\r\n            'munich',\r\n            'hamburg'\r\n          ]\r\n      },\r\n      {\r\n        country: 'áo',\r\n        cities:\r\n          [\r\n            'vienna',\r\n            'salzburg',\r\n            'innsbruck'\r\n          ]\r\n      },\r\n      {\r\n        country: 'thụy sĩ',\r\n        cities:\r\n          [\r\n            'zurich',\r\n            'geneva',\r\n          ]\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    area: 'châu đại dương',\r\n    countries: [\r\n      {\r\n        country: 'úc',\r\n        cities:\r\n          [\r\n            'Sydney',\r\n            'Melbourne',\r\n            'Cairns',\r\n            'Brisbane',\r\n            'Perth',\r\n            'Gold Coast',\r\n            'Adelaide',\r\n            'Darwin'\r\n          ]\r\n      },\r\n      {\r\n        country: 'new zealand',\r\n        cities:\r\n          [\r\n            'Christchurch',\r\n            'Queenstown',\r\n            'Auckland',\r\n            'Rotorua',\r\n            'Wellington',\r\n            'Marlborough',\r\n            'Sông băng Fox & Franz Josef'\r\n          ]\r\n      }\r\n    ]\r\n  },\r\n];\r\n\r\nlet categories2 = [\r\n  {\r\n    category: 'Điểm tham quan',\r\n    categoryItems:\r\n      [\r\n        'Thiên nhiên & vườn bách thảo',\r\n        'Show diễn thông thường',\r\n        'Công viên & công viên nước',\r\n        'Bảo tàng & triển lãm',\r\n        'Cáp treo & ngắm cảnh',\r\n        'Di tích lịch sử',\r\n        'Thủy cung, vườn thú & nông trại',\r\n        'Vé tham quan'\r\n      ]\r\n  },\r\n  {\r\n    category: 'Thể thao & hoạt động ngoài trời',\r\n    categoryItems:\r\n      [\r\n        'Cắm trại',\r\n        'Thể thao trên tuyết',\r\n        'Fitness',\r\n        'Trải nghiệm cảm giác mạnh'\r\n      ]\r\n  },\r\n  {\r\n    category: 'Vui chơi & giải trí',\r\n    categoryItems:\r\n      [\r\n        'Game & vận động',\r\n        'Hoạt động về đêm & đồ uống',\r\n        'Trang phục & nhiếp ảnh',\r\n        'Workshop & học nấu ăn'\r\n      ]\r\n  },\r\n  {\r\n    category: 'Thư giãn',\r\n    categoryItems:\r\n      [\r\n        'Spa & massages',\r\n        'Làm đẹp',\r\n        'Suối nước nóng',\r\n        'Chăm sóc sức khoẻ'\r\n      ]\r\n  },\r\n  {\r\n    category: 'Tour & ngắm cảnh',\r\n    categoryItems:\r\n      [\r\n        'Tour đi bộ & đạp xe',\r\n        'Tour hàng không',\r\n        'Tương tác với động vật',\r\n        'Tour nhiều ngày',\r\n        'Tour phương tiện',\r\n        'Tour thuyền & du thuyền'\r\n      ]\r\n  },\r\n  {\r\n    category: 'Hoạt động & thể thao dưới nước',\r\n    categoryItems:\r\n      [\r\n        'Lặn biển',\r\n        'Lướt sóng',\r\n        'Chèo thuyền & chèo kayak',\r\n        'Câu cá & thể thao dưới nước'\r\n      ]\r\n  },\r\n];\r\n\r\nlet areasContainer = document.querySelector('.list-left-city');\r\nareasContainer.innerHTML = '';\r\nareas.forEach((item, index1) => {\r\n  let itemContainer = `\r\n    <div class=\"list-left-item-content-node\">\r\n      <div class=\"list-left-item-content-node-trigger\">\r\n        <input type=\"checkbox\" name=\"\" id=\"area${index1}\">\r\n        <label for=\"area${index1}\">\r\n          <span>${item.area}</span>\r\n        </label>\r\n        <span class=\"material-icons\">\r\n          expand_more\r\n        </span>\r\n      </div>\r\n      <div class=\"list-left-item-content-node-content\">\r\n    `;\r\n  item.countries.forEach((country, index2) => {\r\n    let countryContainer = `\r\n      <div class=\"list-left-item-content-node-content-node\">\r\n        <div class=\"list-left-item-content-node-content-node-trigger\">\r\n          <input type=\"checkbox\" name=\"\" id=\"area${index1}country${index2}\">\r\n          <label for=\"area${index1}country${index2}\">\r\n            <span>${country.country}</span>\r\n          </label>\r\n          <span class=\"material-icons\">\r\n            expand_more\r\n          </span>\r\n        </div>\r\n        <div class=\"list-left-item-content-node-content-node-content\">\r\n    `;\r\n    country.cities.forEach((city, index3) => {\r\n      let cityContainer = `\r\n        <div class=\"list-left-item-content-node-content-node-content-item\">\r\n          <input id=\"area${index1}country${index2}city{}${index3}\" type=\"checkbox\">\r\n          <label for=\"area${index1}country${index2}city{}${index3}\">${city}</label>\r\n        </div>\r\n      `;\r\n      countryContainer += cityContainer;\r\n    });\r\n    countryContainer += `\r\n        </div>\r\n      </div>\r\n    `;\r\n    itemContainer += countryContainer;\r\n  });\r\n  itemContainer += `\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `;\r\n  areasContainer.innerHTML += itemContainer;\r\n});\r\n\r\n\r\nlet areaTriggers = document.querySelectorAll('.list-left-city .list-left-item-content-node-trigger>span');\r\nareaTriggers.forEach((item) => {\r\n  item.addEventListener('click', (e) => {\r\n    let target = e.target;\r\n    let targetContent = target.parentElement.nextElementSibling;\r\n    if (targetContent.classList.contains('area-active')) {\r\n      targetContent.classList.remove('area-active');\r\n    } else {\r\n      targetContent.classList.add('area-active');\r\n    }\r\n  });\r\n});\r\n\r\nlet countryTriggers = document.querySelectorAll('.list-left-city .list-left-item-content-node-content-node-trigger>span');\r\ncountryTriggers.forEach((item) => {\r\n  item.addEventListener('click', (e) => {\r\n    let target = e.target;\r\n    let targetContent = target.parentElement.nextElementSibling;\r\n    if (targetContent.classList.contains('area-active')) {\r\n      targetContent.classList.remove('area-active');\r\n    } else {\r\n      targetContent.classList.add('area-active');\r\n    }\r\n  });\r\n});\r\n\r\n\r\nlet categorysss = document.querySelector('.list-left-category');\r\ncategorysss.innerHTML = '';\r\ncategories2.forEach((category, index1) => {\r\n  let categoryContainer = `\r\n    <div class=\"list-left-item-content-node\">\r\n      <div class=\"list-left-item-content-node-trigger\">\r\n        <input type=\"checkbox\" name=\"\" id=\"category${index1}\">\r\n        <label for=\"category${index1}\">\r\n          <span>${category.category}</span>\r\n        </label>\r\n        <span class=\"material-icons\">\r\n          expand_more\r\n        </span>\r\n      </div>\r\n      <div class=\"list-left-item-content-node-content\">\r\n  `;\r\n  category.categoryItems.forEach((item, index2) => {\r\n    let itemContainer = `\r\n      <div class=\"list-left-item-content-node-content-item\">\r\n        <input type=\"checkbox\" name=\"\" id=\"category${index1}item${index2}\">\r\n        <label for=\"category${index1}item${index2}\">\r\n          <span>${item}</span>\r\n        </label>\r\n      </div>\r\n    `;\r\n    categoryContainer += itemContainer;\r\n  });\r\n  categoryContainer += `\r\n      </div>\r\n    </div>\r\n  `;\r\n  categorysss.innerHTML += categoryContainer;\r\n});\r\n\r\n\r\nlet categoryTriggers = document.querySelectorAll('.list-left-category .list-left-item-content-node-trigger>span');\r\ncategoryTriggers.forEach((item) => {\r\n  item.addEventListener('click', (e) => {\r\n    let target = e.target;\r\n    let targetContent = target.parentElement.nextElementSibling;\r\n    if (targetContent.classList.contains('area-active')) {\r\n      targetContent.classList.remove('area-active');\r\n    } else {\r\n      targetContent.classList.add('area-active');\r\n    }\r\n  });\r\n});\r\n\r\nlet min = 1;\r\nlet max = 100;\r\n\r\nconst calcLeftPosition = value => 100 / (100 - 1) * (value - 1);\r\n\r\n$('#rangeMin').on('input', function (e) {\r\n  const newValue = parseInt(e.target.value);\r\n  if (newValue > max) return;\r\n  min = newValue;\r\n  $('#thumbMin').css('left', calcLeftPosition(newValue) + '%');\r\n  $('#min').html(newValue);\r\n  $('#line').css({\r\n    'left': calcLeftPosition(newValue) + '%',\r\n    'right': (100 - calcLeftPosition(max)) + '%'\r\n  });\r\n});\r\n\r\n$('#rangeMax').on('input', function (e) {\r\n  const newValue = parseInt(e.target.value);\r\n  if (newValue < min) return;\r\n  max = newValue;\r\n  $('#thumbMax').css('left', calcLeftPosition(newValue) + '%');\r\n  $('#max').html(newValue);\r\n  $('#line').css({\r\n    'left': calcLeftPosition(min) + '%',\r\n    'right': (100 - calcLeftPosition(newValue)) + '%'\r\n  });\r\n});\r\n\r\nvar filterItems = document.querySelectorAll('.list-right-filter-content-filter-item-heading');\r\nfilterItems.forEach((item) => {\r\n  item.addEventListener('click', (e) => {\r\n    let target = e.target;\r\n    let targetContent = target.nextElementSibling;\r\n    if (targetContent.style.display === 'block') {\r\n      targetContent.style.display = 'none';\r\n    } else {\r\n      targetContent.style.display = 'block';\r\n    }\r\n  });\r\n});\r\n"
        }
    ]
}